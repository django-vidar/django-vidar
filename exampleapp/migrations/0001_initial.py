# Generated by Django 5.1.6 on 2025-03-05 13:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={'unique': 'A user with that username already exists.'},
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name='username',
                    ),
                ),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name="email address")),
                (
                    'vidar_playback_completion_percentage',
                    models.CharField(
                        choices=[
                            ('0.5', '50%'),
                            ('0.75', '75%'),
                            ('0.8', '80%'),
                            ('0.85', '85%'),
                            ('0.9', '90%'),
                            ('0.95', '95%'),
                            ('1.0', '100%'),
                        ],
                        default='0.75',
                        help_text='How far into a video do you consider it fully watched?',
                        max_length=10,
                        verbose_name='Vidar - Default Completion Percentage',
                    ),
                ),
                (
                    'vidar_playback_speed',
                    models.CharField(
                        blank=True,
                        choices=[('1.0', '1.0'), ('1.25', '1.25'), ('1.5', '1.5'), ('1.75', '1.75'), ('2.0', '2.0')],
                        max_length=10,
                        verbose_name='Vidar - Default Playback Speed',
                    ),
                ),
                (
                    'vidar_playback_speed_audio',
                    models.CharField(
                        blank=True,
                        choices=[('1.0', '1.0'), ('1.25', '1.25'), ('1.5', '1.5'), ('1.75', '1.75'), ('2.0', '2.0')],
                        max_length=10,
                        verbose_name='Vidar - Default Playback Speed for Audio view',
                    ),
                ),
                (
                    'vidar_playback_volume',
                    models.CharField(
                        blank=True,
                        choices=[('0.0', '0'), ('0.25', '25%'), ('0.5', '50%'), ('0.75', '75%'), ('1.0', '100%')],
                        max_length=10,
                        verbose_name='Vidar - Default Volume',
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
